From 0a39890c967aa57225bb6bdf4821aff7a3a3c082 Mon Sep 17 00:00:00 2001
From: Niels Dossche <7771979+nielsdos@users.noreply.github.com>
Date: Fri, 1 Dec 2023 18:03:35 +0100
Subject: [PATCH] Fix libxml2 2.12 build due to API breaks

See https://github.com/php/php-src/actions/runs/7062192818/job/19225478601
---
 ext/libxml/libxml.c | 14 ++++++++++----
 ext/soap/php_sdl.c  |  2 +-
 2 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/ext/libxml/libxml.c b/ext/libxml/libxml.c
index 22eb1901b8909..1de693892b7aa 100644
--- a/ext/libxml/libxml.c
+++ b/ext/libxml/libxml.c
@@ -472,7 +472,11 @@ static void _php_libxml_free_error(void *ptr)
 	return 1;
 }
 
-static void _php_list_set_error_structure(xmlErrorPtr error, const char *msg)
+#if LIBXML_VERSION >= 21200
+static void _php_list_set_error_structure(const xmlError *error, const char *msg)
+#else
+static void _php_list_set_error_structure(xmlError *error, const char *msg)
+#endif
 {
 	xmlError error_copy;
 	int ret;
@@ -725,7 +729,11 @@ PHP_LIBXML_API void php_libxml_ctx_warning(void *ctx, const char *msg, ...)
 	va_end(args);
 }
 
+#if LIBXML_VERSION >= 21200
+PHP_LIBXML_API void php_libxml_structured_error_handler(void *userData, const xmlError *error)
+#else
 PHP_LIBXML_API void php_libxml_structured_error_handler(void *userData, xmlErrorPtr error)
+#endif
 {
 	_php_list_set_error_structure(error, NULL);
 
@@ -957,9 +965,7 @@ PHP_FUNCTION(libxml_use_internal_errors)
    Retrieve last error from libxml */
 static PHP_FUNCTION(libxml_get_last_error)
 {
-	xmlErrorPtr error;
-
-	error = xmlGetLastError();
+	const xmlError *error = xmlGetLastError();
 	
 	if (error) {
 		object_init_ex(return_value, libxmlerror_class_entry);
--- php-5.2.17/ext/soap/php_sdl.c~	2025-07-14 12:36:58.000000000 +0200
+++ php-5.2.17/ext/soap/php_sdl.c	2025-07-14 12:38:18.655352040 +0200
@@ -300,7 +300,7 @@ static void load_wsdl_ex(zval *this_ptr,
 	sdl_restore_uri_credentials(ctx TSRMLS_CC);
 	
 	if (!wsdl) {
-		xmlErrorPtr xmlErrorPtr = xmlGetLastError();
+		const xmlErrorPtr xmlErrorPtr = xmlGetLastError();
 		if (xmlErrorPtr) {
 			soap_error2(E_ERROR, "Parsing WSDL: Couldn't load from '%s' : %s", struri, xmlErrorPtr->message);
 		} else {
--- php-5.2.17/ext/dom/dom_iterators.c~	2010-01-03 10:23:27.000000000 +0100
+++ php-5.2.17/ext/dom/dom_iterators.c	2025-07-14 12:39:18.039049634 +0200
@@ -42,7 +42,7 @@ struct _notationIterator {
 	xmlNotation *notation;
 };
 
-static void itemHashScanner (void *payload, void *data, xmlChar *name) {
+static void itemHashScanner (void *payload, void *data, const xmlChar *name) {
 	nodeIterator *priv = (nodeIterator *)data;
 
 	if(priv->cur < priv->index) {
diff --git a/ext/libxml/libxml.c b/ext/libxml/libxml.c
index 6cdfbd397f7..dc5e7790952 100644
--- a/ext/libxml/libxml.c
+++ b/ext/libxml/libxml.c
@@ -430,8 +430,10 @@ php_libxml_input_buffer_create_filename(const char *URI, xmlCharEncoding enc)
 static xmlOutputBufferPtr
 php_libxml_output_buffer_create_filename(const char *URI,
                               xmlCharEncodingHandlerPtr encoder,
-                              int compression ATTRIBUTE_UNUSED)
+                              int compression)
 {
+	
+
 	xmlOutputBufferPtr ret;
 	xmlURIPtr puri;
 	void *context = NULL;

