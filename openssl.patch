--- php-8.0.8/ext/openssl/openssl.c~	2021-06-29 09:41:19.000000000 +0200
+++ php-8.0.8/ext/openssl/openssl.c	2021-10-23 20:39:04.743124767 +0200
@@ -1221,7 +1221,9 @@ PHP_MINIT_FUNCTION(openssl)
 	REGISTER_LONG_CONSTANT("OPENSSL_CMS_NOSIGS", CMS_NOSIGS, CONST_CS|CONST_PERSISTENT);
 
 	REGISTER_LONG_CONSTANT("OPENSSL_PKCS1_PADDING", RSA_PKCS1_PADDING, CONST_CS|CONST_PERSISTENT);
+#ifdef RSA_SSLV23_PADDING
 	REGISTER_LONG_CONSTANT("OPENSSL_SSLV23_PADDING", RSA_SSLV23_PADDING, CONST_CS|CONST_PERSISTENT);
+#endif
 	REGISTER_LONG_CONSTANT("OPENSSL_NO_PADDING", RSA_NO_PADDING, CONST_CS|CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("OPENSSL_PKCS1_OAEP_PADDING", RSA_PKCS1_OAEP_PADDING, CONST_CS|CONST_PERSISTENT);
 
diff --git a/ext/openssl/xp_ssl.c b/ext/openssl/xp_ssl.c
index 5564bf6f08..423f696c76 100644
--- a/ext/openssl/xp_ssl.c
+++ b/ext/openssl/xp_ssl.c
@@ -1286,6 +1286,10 @@ static int php_openssl_set_server_specific_opts(php_stream *stream, SSL_CTX *ctx
 	zval *zv;
 	long ssl_ctx_options = SSL_CTX_get_options(ctx);
 
+#ifdef SSL_OP_IGNORE_UNEXPECTED_EOF
+	ssl_ctx_options |= SSL_OP_IGNORE_UNEXPECTED_EOF;
+#endif
+
 #if defined(HAVE_ECDH) && PHP_OPENSSL_API_VERSION < 0x10100
 	if (php_openssl_set_server_ecdh_curve(stream, ctx) == FAILURE) {
 		return FAILURE;
@@ -1628,6 +1632,10 @@ int php_openssl_setup_crypto(php_stream *stream,
 	ssl_ctx_options = SSL_OP_ALL;
 #endif
 
+#ifdef SSL_OP_IGNORE_UNEXPECTED_EOF
+	ssl_ctx_options |= SSL_OP_IGNORE_UNEXPECTED_EOF;
+#endif
+
 	if (sslsock->ctx == NULL) {
 		php_error_docref(NULL, E_WARNING, "SSL context creation failure");
 		return FAILURE;
