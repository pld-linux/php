Related links:

http://bugs.php.net/bug.php?id=43224 this patch

http://bugs.php.net/bug.php?id=41593
http://bugs.php.net/bug.php?id=36158
http://php-fpm.anight.org/

test script too:
<?php
echo php_sapi_name(), ' running ', PHP_VERSION, "<br>\n";
$i = 0;
while ($i < 35) {
    echo (++$i), "<br>\n";
    flush();
    sleep(1);
}
echo "end!<br>\n";
?>

diff -urNp -x '*.orig' php-5.5.38.org/sapi/cgi/cgi_main.c php-5.5.38/sapi/cgi/cgi_main.c
--- php-5.5.38.org/sapi/cgi/cgi_main.c	2016-07-20 10:41:48.000000000 +0200
+++ php-5.5.38/sapi/cgi/cgi_main.c	2021-08-23 23:02:49.659949364 +0200
@@ -107,6 +107,9 @@ static void (*php_php_import_environment
 static int children = 0;
 
 
+/* Socket we are listening on incoming connections */
+static int fcgi_fd = 0;
+
 /**
  * Set to non-zero if we are the parent process
  */
@@ -1453,6 +1456,21 @@ void fastcgi_cleanup(int signal)
 }
 #endif
 
+/**
+ * Graceful shutdown. Close listening sockets.
+ */
+void fastcgi_graceful_shutdown(int signal)
+{
+#ifdef DEBUG_FASTCGI
+	fprintf(stderr, "FastCGI graceful shutdown, pid %d\n", getpid());
+#endif
+
+	/* Close the listening socket so new processes can reuse the same port */
+	closesocket(fcgi_fd);
+	fcgi_fd = 0;
+}
+
+
 PHP_INI_BEGIN()
 	STD_PHP_INI_ENTRY("cgi.rfc2616_headers",     "0",  PHP_INI_ALL,    OnUpdateBool,   rfc2616_headers, php_cgi_globals_struct, php_cgi_globals)
 	STD_PHP_INI_ENTRY("cgi.nph",                 "0",  PHP_INI_ALL,    OnUpdateBool,   nph, php_cgi_globals_struct, php_cgi_globals)
@@ -1756,7 +1774,6 @@ int main(int argc, char *argv[])
 	int requests = 0;
 	int fastcgi;
 	char *bindpath = NULL;
-	int fcgi_fd = 0;
 	fcgi_request *request = NULL;
 	int repeats = 1;
 	int benchmark = 0;
@@ -2049,9 +2066,13 @@ consult the installation file that came
 					parent = 0;
 
 					/* don't catch our signals */
-					sigaction(SIGTERM, &old_term, 0);
 					sigaction(SIGQUIT, &old_quit, 0);
 					sigaction(SIGINT,  &old_int,  0);
+
+					/* call graceful shutdown handler for SIGTERM */
+					act.sa_flags = 0;
+					act.sa_handler = fastcgi_graceful_shutdown;
+					sigaction(SIGTERM, &act, &old_term);
 					break;
 				case -1:
 					perror("php (pre-forking)");
