#!/bin/sh
#
# php-fpm	PHP FastCGI Process Manager
#
# chkconfig:	345 80 30
#
# description:	PHP FastCGI Process Manager
#
# processname:	php.fpm
# config:	/etc/php/fpm.conf
# pidfile:	/var/run/php/fpm.pid
#
# $Id$

# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

php_fpm_BIN=/usr/bin/php-cgi
php_fpm_CONF=/etc/php/fpm.conf
php_fpm_PID=/var/run/php/fpm.pid

php_opts="--fpm-config $php_fpm_CONF"

wait_for_pid() {
	local try=0
	while test $try -lt 35; do
		case "$1" in
			'created')
			if [ -f "$2" ]; then
				try=''
				break
			fi
			;;

			'removed')
			if [ ! -f "$2" ]; then
				try=''
				break
			fi
			;;
		esac

		echo -n .
		try=`expr $try + 1`
		sleep 1
	done
}

start() {
	echo -n "Starting php_fpm "

	$php_fpm_BIN --fpm $php_opts

	if [ "$?" != 0 ] ; then
		echo " failed"
		exit 1
	fi

	wait_for_pid created $php_fpm_PID

	if [ -n "$try" ] ; then
		echo " failed"
		exit 1
	else
		echo " done"
	fi
}

stop() {
	echo -n "Shutting down php_fpm "

	if [ ! -r $php_fpm_PID ] ; then
		echo "warning, no pid file found - php-fpm is not running ?"
		exit 1
	fi

	kill -TERM `cat $php_fpm_PID`

	wait_for_pid removed $php_fpm_PID

	if [ -n "$try" ] ; then
		echo " failed"
		exit 1
	else
		echo " done"
	fi
}

quit() {
	echo -n "Gracefully shutting down php_fpm "

	if [ ! -r $php_fpm_PID ] ; then
		echo "warning, no pid file found - php-fpm is not running ?"
		exit 1
	fi

	kill -QUIT `cat $php_fpm_PID`

	wait_for_pid removed $php_fpm_PID

	if [ -n "$try" ] ; then
		echo " failed"
		exit 1
	else
		echo " done"
	fi
}

reload() {
	echo -n "Reload service php-fpm "

	if [ ! -r $php_fpm_PID ] ; then
		echo "warning, no pid file found - php-fpm is not running ?"
		exit 1
	fi

	kill -USR2 `cat $php_fpm_PID`
	echo " done"
}

condrestart() {
	if [ -f /var/lock/subsys/php-fpm ]; then
		stop
		start
	else
		msg_not_running php-fpm
		RETVAL=$1
	fi
}

flush-logs() {
	echo -n "Re-opening php-fpm log file "

	if [ ! -r $php_fpm_PID ] ; then
		echo "warning, no pid file found - php-fpm is not running ?"
		exit 1
	fi

	kill -USR1 `cat $php_fpm_PID`

	echo " done"
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
	stop
	start
	;;
  try-restart)
	condrestart 0
	;;
  reload|force-reload)
	reload
	;;
  quit) # graceful shutdown
  	quit
	;;
  flush-logs|logrotate)
  	flush-logs
	;;
  status)
	status php-fpm php.fpm
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|try-restart|reload|force-reload|flush-logs|status}"
	exit 3
	;;
esac

exit $RETVAL
