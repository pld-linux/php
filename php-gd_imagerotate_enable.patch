--- ./ext/gd/gd.c.org	Fri May 21 01:38:05 2004
+++ ./ext/gd/gd.c	Thu Aug 12 14:48:38 2004
@@ -162,8 +162,8 @@
 	PHP_FE(imagecopyresampled,						NULL)
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 	PHP_FE(imagerotate,     						NULL)
+#ifdef HAVE_GD_BUNDLED
 	PHP_FE(imageantialias,							NULL)
 #endif
 
@@ -361,11 +361,11 @@
 #ifdef GD2_FMT_COMPRESSED
 	REGISTER_LONG_CONSTANT("IMG_GD2_COMPRESSED", GD2_FMT_COMPRESSED, CONST_CS | CONST_PERSISTENT);
 #endif
-#if HAVE_GD_BUNDLED
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_REPLACE", gdEffectReplace, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_ALPHABLEND", gdEffectAlphaBlend, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_NORMAL", gdEffectNormal, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_OVERLAY", gdEffectOverlay, CONST_CS | CONST_PERSISTENT);
+#if HAVE_GD_BUNDLED
 	REGISTER_LONG_CONSTANT("GD_BUNDLED", 1, CONST_CS | CONST_PERSISTENT);
 #else
 	REGISTER_LONG_CONSTANT("GD_BUNDLED", 0, CONST_CS | CONST_PERSISTENT);
@@ -1088,7 +1088,6 @@
 /* }}} */
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 /* {{{ proto int imagerotate(int src_im, float angle, int bgdcolor)
    Rotate an image using a custom angle */
 PHP_FUNCTION(imagerotate)
@@ -1118,7 +1117,6 @@
 	}
 }
 /* }}} */
-#endif
 
 #if HAVE_GD_IMAGESETTILE
 /* {{{ proto int imagesettile(resource image, resource tile)
--- ./ext/gd/php_gd.h.org	Mon Mar 31 10:49:30 2003
+++ ./ext/gd/php_gd.h	Thu Aug 12 14:46:23 2004
@@ -103,8 +103,8 @@
 PHP_FUNCTION(imagecopyresampled);
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 PHP_FUNCTION(imagerotate);
+#ifdef HAVE_GD_BUNDLED
 PHP_FUNCTION(imageantialias);
 #endif
 
