--- ./ext/gd/gd.c.org	2004-08-17 01:08:56.000000000 +0200
+++ ./ext/gd/gd.c	2004-10-18 14:24:15.797275104 +0200
@@ -209,8 +209,8 @@
 	PHP_FE(imagecopyresampled,						NULL)
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 	PHP_FE(imagerotate,     						NULL)
+#ifdef HAVE_GD_BUNDLED
 	PHP_FE(imageantialias,							NULL)
 #endif
 
@@ -416,11 +416,11 @@
 #ifdef GD2_FMT_COMPRESSED
 	REGISTER_LONG_CONSTANT("IMG_GD2_COMPRESSED", GD2_FMT_COMPRESSED, CONST_CS | CONST_PERSISTENT);
 #endif
-#if HAVE_GD_BUNDLED
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_REPLACE", gdEffectReplace, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_ALPHABLEND", gdEffectAlphaBlend, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_NORMAL", gdEffectNormal, CONST_CS | CONST_PERSISTENT);
 	REGISTER_LONG_CONSTANT("IMG_EFFECT_OVERLAY", gdEffectOverlay, CONST_CS | CONST_PERSISTENT);
+#if HAVE_GD_BUNDLED
 	REGISTER_LONG_CONSTANT("GD_BUNDLED", 1, CONST_CS | CONST_PERSISTENT);
 	/* Section Filters */
 	REGISTER_LONG_CONSTANT("IMG_FILTER_NEGATE", IMAGE_FILTER_NEGATE, CONST_CS | CONST_PERSISTENT);
@@ -1191,7 +1191,6 @@
 /* }}} */
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 /* {{{ proto resource imagerotate(resource src_im, float angle, int bgdcolor)
    Rotate an image using a custom angle */
 PHP_FUNCTION(imagerotate)
@@ -1221,7 +1220,6 @@
 	}
 }
 /* }}} */
-#endif
 
 #if HAVE_GD_IMAGESETTILE
 /* {{{ proto bool imagesettile(resource image, resource tile)
--- ./ext/gd/php_gd.h.org	2004-01-08 18:32:08.000000000 +0100
+++ ./ext/gd/php_gd.h	2004-10-18 14:24:34.372451248 +0200
@@ -103,8 +103,8 @@
 PHP_FUNCTION(imagecopyresampled);
 #endif
 
-#ifdef HAVE_GD_BUNDLED
 PHP_FUNCTION(imagerotate);
+#ifdef HAVE_GD_BUNDLED
 PHP_FUNCTION(imageantialias);
 #endif
 
