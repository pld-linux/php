diff -urN php-4.2.1RC2.org/configure.in php-4.2.1RC2/configure.in
--- php-4.2.1RC2.org/configure.in	Sat May 11 20:49:22 2002
+++ php-4.2.1RC2/configure.in	Sat May 11 21:05:41 2002
@@ -297,6 +297,7 @@
 
 if test "$php_no_nsl_checks" != "yes"; then
 
+AC_CHECK_FUNC(gethostname,[true], [
 AC_CHECK_LIB(nsl, gethostname, [
  PHP_ADD_LIBRARY(nsl)
  AC_DEFINE(HAVE_LIBNSL,1,[ ]) ],[
@@ -304,6 +305,7 @@
   PHP_ADD_LIBRARY(nsl)
   AC_DEFINE(HAVE_LIBNSL,1,[ ]) ], [])
 ])
+])
 
 fi
 
diff -urN php-4.2.1RC2.org/ext/gmp/config.m4 php-4.2.1RC2/ext/gmp/config.m4
--- php-4.2.1RC2.org/ext/gmp/config.m4	Sat May 11 20:49:22 2002
+++ php-4.2.1RC2/ext/gmp/config.m4	Sat May 11 21:05:41 2002
@@ -21,5 +21,6 @@
 
   PHP_EXTENSION(gmp, $ext_shared)
   AC_DEFINE(HAVE_GMP, 1, [ ])
-  PHP_ADD_LIBRARY_WITH_PATH(gmp, $GMP_DIR/lib)
+  PHP_ADD_LIBRARY_WITH_PATH(gmp, $GMP_DIR/lib, GMP_SHARED_LIBADD)
 fi
+PHP_SUBST(GMP_SHARED_LIBADD)
diff -urN php-4.2.1RC2.org/ext/standard/url_scanner_ex.c.orig php-4.2.1RC2/ext/standard/url_scanner_ex.c.orig
--- php-4.2.1RC2.org/ext/standard/url_scanner_ex.c.orig	Sat May 11 20:49:24 2002
+++ php-4.2.1RC2/ext/standard/url_scanner_ex.c.orig	Thu Jan  1 01:00:00 1970
@@ -1,892 +0,0 @@
-/* Generated by re2c 0.5 on Fri Mar  1 17:51:19 2002 */ 
-#line 1 "url_scanner_ex.re"
-/*
-  +----------------------------------------------------------------------+
-  | PHP Version 4                                                        |
-  +----------------------------------------------------------------------+
-  | Copyright (c) 1997-2002 The PHP Group                                |
-  +----------------------------------------------------------------------+
-  | This source file is subject to version 2.02 of the PHP license,      |
-  | that is bundled with this package in the file LICENSE, and is        |
-  | available at through the world-wide-web at                           |
-  | http://www.php.net/license/2_02.txt.                                 |
-  | If you did not receive a copy of the PHP license and are unable to   |
-  | obtain it through the world-wide-web, please send a note to          |
-  | license@php.net so we can mail you a copy immediately.               |
-  +----------------------------------------------------------------------+
-  | Author: Sascha Schumann <sascha@schumann.cx>                         |
-  +----------------------------------------------------------------------+
-*/
-
-#include "php.h"
-
-#ifdef HAVE_UNISTD_H
-#include <unistd.h>
-#endif
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "php_ini.h"
-#include "php_globals.h"
-#define STATE_TAG SOME_OTHER_STATE_TAG
-#include "basic_functions.h"
-#undef STATE_TAG
-
-#define url_adapt_ext url_adapt_ext_ex
-#define url_scanner url_scanner_ex
-
-#include "php_smart_str.h"
-
-static PHP_INI_MH(OnUpdateTags)
-{
-	url_adapt_state_ex_t *ctx;
-	char *key;
-	char *lasts;
-	char *tmp;
-	
-	ctx = &BG(url_adapt_state_ex);
-	
-	tmp = estrndup(new_value, new_value_length);
-	
-	if (ctx->tags)
-		zend_hash_destroy(ctx->tags);
-	else
-		ctx->tags = malloc(sizeof(HashTable));
-	
-	zend_hash_init(ctx->tags, 0, NULL, NULL, 1);
-	
-	for (key = php_strtok_r(tmp, ",", &lasts);
-			key;
-			key = php_strtok_r(NULL, ",", &lasts)) {
-		char *val;
-
-		val = strchr(key, '=');
-		if (val) {
-			char *q;
-			int keylen;
-			
-			*val++ = '\0';
-			for (q = key; *q; q++)
-				*q = tolower(*q);
-			keylen = q - key;
-			/* key is stored withOUT NUL
-			   val is stored WITH    NUL */
-			zend_hash_add(ctx->tags, key, keylen, val, strlen(val)+1, NULL);
-		}
-	}
-
-	efree(tmp);
-
-	return SUCCESS;
-}
-
-PHP_INI_BEGIN()
-	STD_PHP_INI_ENTRY("url_rewriter.tags", "a=href,area=href,frame=src,form=fakeentry", PHP_INI_ALL, OnUpdateTags, url_adapt_state_ex, php_basic_globals, basic_globals)
-PHP_INI_END()
-
-#line 91
-
-
-#define YYFILL(n) goto done
-#define YYCTYPE unsigned char
-#define YYCURSOR p
-#define YYLIMIT q
-#define YYMARKER r
-	
-static inline void append_modified_url(smart_str *url, smart_str *dest, smart_str *name, smart_str *val, const char *separator)
-{
-	register const char *p, *q;
-	const char *bash = NULL;
-	const char *sep = "?";
-	
-	q = (p = url->c) + url->len;
-
-scan:
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128,   0, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128,   0, 128, 128, 128, 128,   0, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	};
-	goto yy0;
-yy1:	++YYCURSOR;
-yy0:
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-	if(yybm[0+yych] & 128)	goto yy8;
-	if(yych <= '9')	goto yy6;
-	if(yych >= ';')	goto yy4;
-yy2:	yych = *++YYCURSOR;
-yy3:
-#line 109
-	{ smart_str_append(dest, url); return; }
-yy4:	yych = *++YYCURSOR;
-yy5:
-#line 110
-	{ sep = separator; goto scan; }
-yy6:	yych = *++YYCURSOR;
-yy7:
-#line 111
-	{ bash = p - 1; goto done; }
-yy8:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy9:	if(yybm[0+yych] & 128)	goto yy8;
-yy10:
-#line 112
-	{ goto scan; }
-}
-#line 113
-
-done:
-	
-	/* Don't modify URLs of the format "#mark" */
-	if (bash && bash - url->c == 0) {
-		smart_str_append(dest, url);
-		return;
-	}
-
-	if (bash)
-		smart_str_appendl(dest, url->c, bash - url->c);
-	else
-		smart_str_append(dest, url);
-
-	smart_str_appends(dest, sep);
-	smart_str_append(dest, name);
-	smart_str_appendc(dest, '=');
-	smart_str_append(dest, val);
-
-	if (bash)
-		smart_str_appendl(dest, bash, q - bash);
-}
-
-
-#undef YYFILL
-#undef YYCTYPE
-#undef YYCURSOR
-#undef YYLIMIT
-#undef YYMARKER
-
-static inline void tag_arg(url_adapt_state_ex_t *ctx, char quote TSRMLS_DC)
-{
-	char f = 0;
-
-	if (strncasecmp(ctx->arg.c, ctx->lookup_data, ctx->arg.len) == 0)
-		f = 1;
-
-	smart_str_appendc(&ctx->result, quote);
-	if (f) {
-		append_modified_url(&ctx->val, &ctx->result, &ctx->q_name, &ctx->q_value, PG(arg_separator).output);
-	} else {
-		smart_str_append(&ctx->result, &ctx->val);
-	}
-	smart_str_appendc(&ctx->result, quote);
-}
-
-enum {
-	STATE_PLAIN = 0,
-	STATE_TAG,
-	STATE_NEXT_ARG,
-	STATE_ARG,
-	STATE_BEFORE_VAL,
-	STATE_VAL
-};
-
-#define YYFILL(n) goto stop
-#define YYCTYPE unsigned char
-#define YYCURSOR xp
-#define YYLIMIT end
-#define YYMARKER q
-#define STATE ctx->state
-
-#define STD_PARA url_adapt_state_ex_t *ctx, char *start, char *YYCURSOR TSRMLS_DC
-#define STD_ARGS ctx, start, xp TSRMLS_CC
-
-static inline void passthru(STD_PARA) 
-{
-	smart_str_appendl(&ctx->result, start, YYCURSOR - start);
-}
-
-static inline void handle_form(STD_PARA) 
-{
-	if (ctx->tag.len == 4 && strncasecmp(ctx->tag.c, "form", 4) == 0) {
-		smart_str_appends(&ctx->result, "<input type=\"hidden\" name=\""); 
-		smart_str_append(&ctx->result, &ctx->q_name);
-		smart_str_appends(&ctx->result, "\" value=\"");
-		smart_str_append(&ctx->result, &ctx->q_value);
-		smart_str_appends(&ctx->result, "\" />");
-	}
-}
-
-/*
- *  HANDLE_TAG copies the HTML Tag and checks whether we 
- *  have that tag in our table. If we might modify it,
- *  we continue to scan the tag, otherwise we simply copy the complete
- *  HTML stuff to the result buffer.
- */
-
-static inline void handle_tag(STD_PARA) 
-{
-	int ok = 0;
-	int i;
-
-	ctx->tag.len = 0;
-	smart_str_appendl(&ctx->tag, start, YYCURSOR - start);
-	for (i = 0; i < ctx->tag.len; i++)
-		ctx->tag.c[i] = tolower(ctx->tag.c[i]);
-	if (zend_hash_find(ctx->tags, ctx->tag.c, ctx->tag.len, (void **) &ctx->lookup_data) == SUCCESS)
-		ok = 1;
-	STATE = ok ? STATE_NEXT_ARG : STATE_PLAIN;
-}
-
-static inline void handle_arg(STD_PARA) 
-{
-	ctx->arg.len = 0;
-	smart_str_appendl(&ctx->arg, start, YYCURSOR - start);
-}
-
-static inline void handle_val(STD_PARA, char quotes, char type) 
-{
-	smart_str_setl(&ctx->val, start + quotes, YYCURSOR - start - quotes * 2);
-	tag_arg(ctx, type TSRMLS_CC);
-}
-
-#ifdef SCANNER_DEBUG
-#define scdebug(x) printf x
-#else
-#define scdebug(x)
-#endif
-
-static inline void xx_mainloop(url_adapt_state_ex_t *ctx, const char *newdata, size_t newlen TSRMLS_DC)
-{
-	char *end, *q;
-	char *xp;
-	char *start;
-	int rest;
-
-	smart_str_appendl(&ctx->buf, newdata, newlen);
-	
-	YYCURSOR = ctx->buf.c;
-	YYLIMIT = ctx->buf.c + ctx->buf.len;
-
-	switch (STATE) {
-		case STATE_PLAIN: goto state_plain;
-		case STATE_TAG: goto state_tag;
-		case STATE_NEXT_ARG: goto state_next_arg;
-		case STATE_ARG: goto state_arg;
-		case STATE_BEFORE_VAL: goto state_before_val;
-		case STATE_VAL: goto state_val;
-	}
-	
-
-state_plain_begin:
-	STATE = STATE_PLAIN;
-	
-state_plain:
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128,   0, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	};
-	goto yy11;
-yy12:	++YYCURSOR;
-yy11:
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-	if(yybm[0+yych] & 128)	goto yy15;
-yy13:	yych = *++YYCURSOR;
-yy14:
-#line 261
-	{ passthru(STD_ARGS); STATE = STATE_TAG; goto state_tag; }
-yy15:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy16:	if(yybm[0+yych] & 128)	goto yy15;
-yy17:
-#line 262
-	{ passthru(STD_ARGS); goto state_plain; }
-}
-#line 263
-
-
-state_tag:	
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128,   0,   0,   0,   0,   0, 
-	  0, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	};
-	goto yy18;
-yy19:	++YYCURSOR;
-yy18:
-	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
-	yych = *YYCURSOR;
-	if(yych <= '@')	goto yy22;
-	if(yych <= 'Z')	goto yy20;
-	if(yych <= '`')	goto yy22;
-	if(yych >= '{')	goto yy22;
-yy20:	yych = *++YYCURSOR;
-	goto yy25;
-yy21:
-#line 268
-	{ handle_tag(STD_ARGS); /* Sets STATE */; passthru(STD_ARGS); if (STATE == STATE_PLAIN) goto state_plain; else goto state_next_arg; }
-yy22:	yych = *++YYCURSOR;
-yy23:
-#line 269
-	{ passthru(STD_ARGS); goto state_plain_begin; }
-yy24:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy25:	if(yybm[0+yych] & 128)	goto yy24;
-	goto yy21;
-}
-#line 270
-
-
-state_next_arg_begin:
-	STATE = STATE_NEXT_ARG;
-	
-state_next_arg:
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0, 128, 128, 128,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	128,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	};
-	goto yy26;
-yy27:	++YYCURSOR;
-yy26:
-	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
-	yych = *YYCURSOR;
-	if(yych <= '='){
-		if(yych <= '\v'){
-			if(yych <= '\b')	goto yy34;
-			goto yy30;
-		} else {
-			if(yych == ' ')	goto yy30;
-			goto yy34;
-		}
-	} else {
-		if(yych <= 'Z'){
-			if(yych <= '>')	goto yy28;
-			if(yych <= '@')	goto yy34;
-			goto yy32;
-		} else {
-			if(yych <= '`')	goto yy34;
-			if(yych <= 'z')	goto yy32;
-			goto yy34;
-		}
-	}
-yy28:	yych = *++YYCURSOR;
-yy29:
-#line 278
-	{ passthru(STD_ARGS); handle_form(STD_ARGS); goto state_plain_begin; }
-yy30:	yych = *++YYCURSOR;
-	goto yy37;
-yy31:
-#line 279
-	{ passthru(STD_ARGS); goto state_next_arg; }
-yy32:	yych = *++YYCURSOR;
-yy33:
-#line 280
-	{ --YYCURSOR; STATE = STATE_ARG; goto state_arg; }
-yy34:	yych = *++YYCURSOR;
-yy35:
-#line 281
-	{ passthru(STD_ARGS); goto state_plain_begin; }
-yy36:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy37:	if(yybm[0+yych] & 128)	goto yy36;
-	goto yy31;
-}
-#line 282
-
-
-state_arg:
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128,   0,   0,   0,   0,   0, 
-	  0, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128, 128,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	};
-	goto yy38;
-yy39:	++YYCURSOR;
-yy38:
-	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
-	yych = *YYCURSOR;
-	if(yych <= '@')	goto yy42;
-	if(yych <= 'Z')	goto yy40;
-	if(yych <= '`')	goto yy42;
-	if(yych >= '{')	goto yy42;
-yy40:	yych = *++YYCURSOR;
-	goto yy45;
-yy41:
-#line 287
-	{ passthru(STD_ARGS); handle_arg(STD_ARGS); STATE = STATE_BEFORE_VAL; goto state_before_val; }
-yy42:	yych = *++YYCURSOR;
-yy43:
-#line 288
-	{ passthru(STD_ARGS); STATE = STATE_NEXT_ARG; goto state_next_arg; }
-yy44:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy45:	if(yybm[0+yych] & 128)	goto yy44;
-	goto yy41;
-}
-#line 289
-
-
-state_before_val:
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	128,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	};
-	goto yy46;
-yy47:	++YYCURSOR;
-yy46:
-	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
-	yych = *YYCURSOR;
-	if(yych == ' ')	goto yy48;
-	if(yych == '=')	goto yy50;
-	goto yy52;
-yy48:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ' ')	goto yy55;
-	if(yych == '=')	goto yy53;
-yy49:
-#line 295
-	{ --YYCURSOR; goto state_next_arg_begin; }
-yy50:	yych = *++YYCURSOR;
-	goto yy54;
-yy51:
-#line 294
-	{ passthru(STD_ARGS); STATE = STATE_VAL; goto state_val; }
-yy52:	yych = *++YYCURSOR;
-	goto yy49;
-yy53:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy54:	if(yybm[0+yych] & 128)	goto yy53;
-	goto yy51;
-yy55:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy56:	if(yych == ' ')	goto yy55;
-	if(yych == '=')	goto yy53;
-yy57:	YYCURSOR = YYMARKER;
-	switch(yyaccept){
-	case 0:	goto yy49;
-	}
-}
-#line 296
-
-
-
-state_val:
-	start = YYCURSOR;
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 192, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	192, 224,  64, 224, 224, 224, 224, 128, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224,   0, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	224, 224, 224, 224, 224, 224, 224, 224, 
-	};
-	goto yy58;
-yy59:	++YYCURSOR;
-yy58:
-	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
-	yych = *YYCURSOR;
-	if(yych <= '!'){
-		if(yych <= '\n'){
-			if(yych <= '\t')	goto yy63;
-			goto yy65;
-		} else {
-			if(yych == ' ')	goto yy65;
-			goto yy63;
-		}
-	} else {
-		if(yych <= '\''){
-			if(yych <= '"')	goto yy60;
-			if(yych <= '&')	goto yy63;
-			goto yy62;
-		} else {
-			if(yych == '>')	goto yy65;
-			goto yy63;
-		}
-	}
-yy60:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych != '>')	goto yy74;
-yy61:
-#line 305
-	{ passthru(STD_ARGS); goto state_next_arg_begin; }
-yy62:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == '>')	goto yy61;
-	goto yy69;
-yy63:	yych = *++YYCURSOR;
-	goto yy67;
-yy64:
-#line 304
-	{ handle_val(STD_ARGS, 0, '"'); goto state_next_arg_begin; }
-yy65:	yych = *++YYCURSOR;
-	goto yy61;
-yy66:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy67:	if(yybm[0+yych] & 32)	goto yy66;
-	goto yy64;
-yy68:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy69:	if(yybm[0+yych] & 64)	goto yy68;
-	if(yych <= '=')	goto yy71;
-yy70:	YYCURSOR = YYMARKER;
-	switch(yyaccept){
-	case 0:	goto yy61;
-	}
-yy71:	yych = *++YYCURSOR;
-yy72:
-#line 303
-	{ handle_val(STD_ARGS, 1, '\''); goto state_next_arg_begin; }
-yy73:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy74:	if(yybm[0+yych] & 128)	goto yy73;
-	if(yych >= '>')	goto yy70;
-yy75:	yych = *++YYCURSOR;
-yy76:
-#line 302
-	{ handle_val(STD_ARGS, 1, '"'); goto state_next_arg_begin; }
-}
-#line 306
-
-
-stop:
-	rest = YYLIMIT - start;
-	scdebug(("stopped in state %d at pos %d (%d:%c) %d\n", STATE, YYCURSOR - ctx->buf.c, *YYCURSOR, *YYCURSOR, rest));
-	/* XXX: Crash avoidance. Need to work with reporter to figure out what goes wrong */	
-	if (rest < 0) rest = 0;
-	
-	if (rest) memmove(ctx->buf.c, start, rest);
-	ctx->buf.len = rest;
-}
-
-
-char *url_adapt_single_url(const char *url, size_t urllen, const char *name, const char *value, size_t *newlen TSRMLS_DC)
-{
-	smart_str surl = {0};
-	smart_str buf = {0};
-	smart_str sname = {0};
-	smart_str sval = {0};
-
-	smart_str_setl(&surl, url, urllen);
-	smart_str_sets(&sname, name);
-	smart_str_sets(&sval, value);
-
-	append_modified_url(&surl, &buf, &sname, &sval, PG(arg_separator).output);
-
-	smart_str_0(&buf);
-	if (newlen) *newlen = buf.len;
-	
-	return buf.c;
-}
-
-char *url_adapt_ext(const char *src, size_t srclen, const char *name, const char *value, size_t *newlen, zend_bool do_flush TSRMLS_DC)
-{
-	url_adapt_state_ex_t *ctx;
-	char *retval;
-
-	ctx = &BG(url_adapt_state_ex);
-
-	smart_str_sets(&ctx->q_name, name);
-	smart_str_sets(&ctx->q_value, value);
-	xx_mainloop(ctx, src, srclen TSRMLS_CC);
-
-	*newlen = ctx->result.len;
-	if (!ctx->result.c) {
-		smart_str_appendl(&ctx->result, "", 0);
-	}
-	smart_str_0(&ctx->result);
-	if (do_flush) {
-		smart_str_appendl(&ctx->result, ctx->buf.c, ctx->buf.len);
-		*newlen += ctx->buf.len;
-		smart_str_free(&ctx->buf);
-	}
-	retval = ctx->result.c;
-	ctx->result.c = NULL;
-	ctx->result.len = 0;
-	return retval;
-}
-
-int php_url_scanner_ex_activate(TSRMLS_D)
-{
-	url_adapt_state_ex_t *ctx;
-	
-	ctx = &BG(url_adapt_state_ex);
-
-	memset(ctx, 0, ((size_t) &((url_adapt_state_ex_t *)0)->tags));
-
-	return SUCCESS;
-}
-
-int php_url_scanner_ex_deactivate(TSRMLS_D)
-{
-	url_adapt_state_ex_t *ctx;
-	
-	ctx = &BG(url_adapt_state_ex);
-
-	smart_str_free(&ctx->result);
-	smart_str_free(&ctx->buf);
-	smart_str_free(&ctx->tag);
-	smart_str_free(&ctx->arg);
-
-	return SUCCESS;
-}
-
-PHP_MINIT_FUNCTION(url_scanner)
-{
-	url_adapt_state_ex_t *ctx;
-	
-	ctx = &BG(url_adapt_state_ex);
-
-	ctx->tags = NULL;
-	
-	REGISTER_INI_ENTRIES();
-	return SUCCESS;
-}
-
-PHP_MSHUTDOWN_FUNCTION(url_scanner)
-{
-	UNREGISTER_INI_ENTRIES();
-	zend_hash_destroy(BG(url_adapt_state_ex).tags);
-	free(BG(url_adapt_state_ex).tags);
-	return SUCCESS;
-}
diff -urN php-4.2.1RC2.org/ext/standard/var_unserializer.c.orig php-4.2.1RC2/ext/standard/var_unserializer.c.orig
--- php-4.2.1RC2.org/ext/standard/var_unserializer.c.orig	Sat May 11 20:49:24 2002
+++ php-4.2.1RC2/ext/standard/var_unserializer.c.orig	Thu Jan  1 01:00:00 1970
@@ -1,770 +0,0 @@
-/* Generated by re2c 0.5 on Sun Apr 28 19:59:39 2002 */ 
-#line 1 "var_unserializer.re"
-#include "php.h"
-#include "ext/standard/php_var.h"
-#include "php_incomplete_class.h"
-
-/* {{{ reference-handling for unserializer: var_* */
-#define VAR_ENTRIES_MAX 1024
-
-typedef struct {
-	zval *data[VAR_ENTRIES_MAX];
-	int used_slots;
-	void *next;
-} var_entries;
-
-static inline void var_push(php_unserialize_data_t *var_hashx, zval **rval)
-{
-	var_entries *var_hash = var_hashx->first, *prev = NULL;
-
-	while (var_hash && var_hash->used_slots == VAR_ENTRIES_MAX) {
-		prev = var_hash;
-		var_hash = var_hash->next;
-	}
-
-	if (!var_hash) {
-		var_hash = emalloc(sizeof(var_entries));
-		var_hash->used_slots = 0;
-		var_hash->next = 0;
-
-		if (!var_hashx->first)
-			var_hashx->first = var_hash;
-		else
-			prev->next = var_hash;
-	}
-
-	var_hash->data[var_hash->used_slots++] = *rval;
-}
-
-void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval **nzval)
-{
-	int i;
-	var_entries *var_hash = var_hashx->first;
-	
-	while (var_hash) {
-		for (i = 0; i < var_hash->used_slots; i++) {
-			if (var_hash->data[i] == ozval) {
-				var_hash->data[i] = *nzval;
-				return;
-			}
-		}
-		var_hash = var_hash->next;
-	}
-}
-
-static int var_access(php_unserialize_data_t *var_hashx, int id, zval ***store)
-{
-	var_entries *var_hash = var_hashx->first;
-	
-	while (id >= VAR_ENTRIES_MAX && var_hash && var_hash->used_slots == VAR_ENTRIES_MAX) {
-		var_hash = var_hash->next;
-		id -= VAR_ENTRIES_MAX;
-	}
-
-	if (!var_hash) return !SUCCESS;
-
-	if (id >= var_hash->used_slots) return !SUCCESS;
-
-	*store = &var_hash->data[id];
-
-	return SUCCESS;
-}
-
-void var_destroy(php_unserialize_data_t *var_hashx)
-{
-	void *next;
-	var_entries *var_hash = var_hashx->first;
-	
-	while (var_hash) {
-		next = var_hash->next;
-		efree(var_hash);
-		var_hash = next;
-	}
-}
-
-/* }}} */
-
-#define YYFILL(n) do { } while (0)
-#define YYCTYPE unsigned char
-#define YYCURSOR cursor
-#define YYLIMIT limit
-#define YYMARKER marker
-
-
-#line 97
-
-
-
-
-static inline int parse_iv2(const char *p, const char **q)
-{
-	char cursor;
-	int result = 0;
-	int neg = 0;
-
-	switch (*p) {
-		case '-':
-			neg++;
-			/* fall-through */
-		case '+':
-			p++;
-	}
-	
-	while (1) {
-		cursor = *p;
-		if (cursor >= '0' && cursor <= '9') {
-			result = result * 10 + cursor - '0';
-		} else {
-			break;
-		}
-		p++;
-	}
-	if (q) *q = p;
-	if (neg) return -result;
-	return result;
-}
-
-static inline int parse_iv(const char *p)
-{
-	return parse_iv2(p, NULL);
-}
-
-#define UNSERIALIZE_PARAMETER zval **rval, const char **p, const char *max, php_unserialize_data_t *var_hash TSRMLS_DC
-#define UNSERIALIZE_PASSTHRU rval, p, max, var_hash TSRMLS_CC
-
-static inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, int elements)
-{
-	while (elements-- > 0) {
-		zval *key, *data;
-
-		ALLOC_INIT_ZVAL(key);
-
-		if (!php_var_unserialize(&key, p, max, NULL TSRMLS_CC)) {
-			zval_dtor(key);
-			FREE_ZVAL(key);
-			return 0;
-		}
-
-		ALLOC_INIT_ZVAL(data);
-
-		if (!php_var_unserialize(&data, p, max, var_hash TSRMLS_CC)) {
-			zval_dtor(key);
-			FREE_ZVAL(key);
-			zval_dtor(data);
-			FREE_ZVAL(data);
-			return 0;
-		}
-
-		switch (Z_TYPE_P(key)) {
-			case IS_LONG:
-				zend_hash_index_update(ht, Z_LVAL_P(key), &data, sizeof(data), NULL);
-				break;
-			case IS_STRING:
-				zend_hash_update(ht, Z_STRVAL_P(key), Z_STRLEN_P(key) + 1, &data, sizeof(data), NULL);
-				break;
-
-		}
-		
-		zval_dtor(key);
-		FREE_ZVAL(key);
-	}
-
-	return 1;
-}
-
-static inline int finish_nested_data(UNSERIALIZE_PARAMETER)
-{
-	if (*((*p)++) == '}') 
-		return 1;
-
-#if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE
-	zval_ptr_dtor(rval);
-#endif
-	return 0;
-}
-
-static inline int object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)
-{
-	int elements;
-
-	elements = parse_iv2((*p) + 2, p);
-
-	(*p) += 2;
-	
-	object_init_ex(*rval, ce);
-	return elements;
-}
-
-static inline int object_common2(UNSERIALIZE_PARAMETER, int elements)
-{
-	zval *retval_ptr = NULL;
-	zval fname;
-
-	if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_PP(rval), elements)) {
-		return 0;
-	}
-
-	INIT_PZVAL(&fname);
-	ZVAL_STRINGL(&fname, "__wakeup", sizeof("__wakeup") - 1, 0);
-	call_user_function_ex(CG(function_table), rval, &fname, &retval_ptr, 0, 0, 1, NULL TSRMLS_CC);
-
-	if (retval_ptr)
-		zval_ptr_dtor(&retval_ptr);
-
-	return finish_nested_data(UNSERIALIZE_PASSTHRU);
-
-}
-
-PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)
-{
-	const unsigned char *cursor, *limit, *marker, *start;
-	zval **rval_ref;
-
-	cursor = *p;
-	
-	if (var_hash && cursor[0] != 'R') {
-		var_push(var_hash, rval);
-	}
-
-	start = cursor;
-
-	
-	
-{
-	YYCTYPE yych;
-	unsigned int yyaccept;
-	static unsigned char yybm[] = {
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	128, 128, 128, 128, 128, 128, 128, 128, 
-	128, 128,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	  0,   0,   0,   0,   0,   0,   0,   0, 
-	};
-	goto yy0;
-yy1:	++YYCURSOR;
-yy0:
-	if((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
-	yych = *YYCURSOR;
-	if(yych <= 'd'){
-		if(yych <= 'R'){
-			if(yych <= 'N'){
-				if(yych <= 'M')	goto yy15;
-				goto yy5;
-			} else {
-				if(yych <= 'O')	goto yy12;
-				if(yych <= 'Q')	goto yy15;
-				goto yy3;
-			}
-		} else {
-			if(yych <= 'a'){
-				if(yych <= '`')	goto yy15;
-				goto yy10;
-			} else {
-				if(yych <= 'b')	goto yy6;
-				if(yych <= 'c')	goto yy15;
-				goto yy8;
-			}
-		}
-	} else {
-		if(yych <= 'r'){
-			if(yych <= 'i'){
-				if(yych <= 'h')	goto yy15;
-				goto yy7;
-			} else {
-				if(yych == 'o')	goto yy11;
-				goto yy15;
-			}
-		} else {
-			if(yych <= '|'){
-				if(yych <= 's')	goto yy9;
-				goto yy15;
-			} else {
-				if(yych <= '}')	goto yy13;
-				if(yych <= '\277')	goto yy15;
-			}
-		}
-	}
-yy2:	YYCURSOR = YYMARKER;
-	switch(yyaccept){
-	case 0:	goto yy4;
-	}
-yy3:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy75;
-yy4:
-#line 404
-	{ return 0; }
-yy5:	yych = *++YYCURSOR;
-	if(yych == ';')	goto yy73;
-	goto yy4;
-yy6:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy67;
-	goto yy4;
-yy7:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy61;
-	goto yy4;
-yy8:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy44;
-	goto yy4;
-yy9:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy37;
-	goto yy4;
-yy10:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy30;
-	goto yy4;
-yy11:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy23;
-	goto yy4;
-yy12:	yyaccept = 0;
-	yych = *(YYMARKER = ++YYCURSOR);
-	if(yych == ':')	goto yy16;
-	goto yy4;
-yy13:	yych = *++YYCURSOR;
-yy14:
-#line 398
-	{
-	/* this is the case where we have less data than planned */
-	zend_error(E_NOTICE, "Unexpected end of serialized data");
-	return 0; /* not sure if it should be 0 or 1 here? */
-}
-yy15:	yych = *++YYCURSOR;
-	goto yy4;
-yy16:	yych = *++YYCURSOR;
-	if(yybm[0+yych] & 128)	goto yy18;
-	if(yych == '+')	goto yy17;
-	if(yych != '-')	goto yy2;
-yy17:	yych = *++YYCURSOR;
-	if(yybm[0+yych] & 128)	goto yy18;
-	goto yy2;
-yy18:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy19:	if(yybm[0+yych] & 128)	goto yy18;
-	if(yych != ':')	goto yy2;
-yy20:	yych = *++YYCURSOR;
-	if(yych != '"')	goto yy2;
-yy21:	yych = *++YYCURSOR;
-yy22:
-#line 330
-	{
-	int len;
-	int elements;
-	int len2;
-	char *class_name;
-	zend_class_entry *ce;
-	int incomplete_class = 0;
-	
-	char *rval_temp;
-	
-	zval *user_func;
-	zval *retval_ptr;
-	zval **args[1];
-	zval *arg_func_name;
-	
-	INIT_PZVAL(*rval);
-	len2 = len = parse_iv(start + 2);
-	if (len == 0)
-		return 0;
-
-	class_name = estrndup(YYCURSOR, len);
-	YYCURSOR += len;
-
-	while (len-- > 0) {
-		if (class_name[len] >= 'A' && class_name[len] <= 'Z') {
-			class_name[len] = class_name[len] - 'A' + 'a';
-		}
-	}
-
-	if (zend_hash_find(CG(class_table), class_name, len2 + 1, (void **) &ce) != SUCCESS) {
-		if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\0')) {
-			incomplete_class = 1;
-			ce = PHP_IC_ENTRY;
-		} else {
-			MAKE_STD_ZVAL(user_func);
-			ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);
-
-			args[0] = &arg_func_name;
-			MAKE_STD_ZVAL(arg_func_name);
-			ZVAL_STRING(arg_func_name, class_name, 1);
-				
-			if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {
-				zend_error(E_WARNING, "'unserialize_callback_func' defined (%s) but not found", user_func->value.str.val);
-				incomplete_class = 1;
-				ce = PHP_IC_ENTRY;
-			} else {
-				if (zend_hash_find(CG(class_table), class_name, len2 + 1, (void **) &ce) != SUCCESS) {
-					zend_error(E_WARNING, "'unserialize_callback_func' (%s) hasn't defined the class it was called for", user_func->value.str.val);
-					incomplete_class = 1;
-					ce = PHP_IC_ENTRY;
-				} else
-					efree(class_name);
-			}
-		}
-	} else 
-		efree(class_name);
-
-	*p = YYCURSOR;
-	elements = object_common1(UNSERIALIZE_PASSTHRU, ce);
-
-	if (incomplete_class) {
-		php_store_class_name(*rval, class_name, len2);
-		efree(class_name);
-	}
-
-	return object_common2(UNSERIALIZE_PASSTHRU, elements);
-}
-yy23:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy24;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy25;
-		goto yy2;
-	}
-yy24:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy25:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy26:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy25;
-	if(yych >= ';')	goto yy2;
-yy27:	yych = *++YYCURSOR;
-	if(yych != '"')	goto yy2;
-yy28:	yych = *++YYCURSOR;
-yy29:
-#line 322
-	{
-
-	INIT_PZVAL(*rval);
-	
-	return object_common2(UNSERIALIZE_PASSTHRU,
-			object_common1(UNSERIALIZE_PASSTHRU, &zend_standard_class_def));
-}
-yy30:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy31;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy32;
-		goto yy2;
-	}
-yy31:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy32:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy33:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy32;
-	if(yych >= ';')	goto yy2;
-yy34:	yych = *++YYCURSOR;
-	if(yych != '{')	goto yy2;
-yy35:	yych = *++YYCURSOR;
-yy36:
-#line 304
-	{
-	int elements = parse_iv(start + 2);
-
-	*p = YYCURSOR;
-
-	INIT_PZVAL(*rval);
-	Z_TYPE_PP(rval) = IS_ARRAY;
-	ALLOC_HASHTABLE(Z_ARRVAL_PP(rval));
-
-	zend_hash_init(Z_ARRVAL_PP(rval), elements + 1, NULL, ZVAL_PTR_DTOR, 0);
-
-	if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements)) {
-		return 0;
-	}
-
-	return finish_nested_data(UNSERIALIZE_PASSTHRU);
-}
-yy37:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy38;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy39;
-		goto yy2;
-	}
-yy38:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy39:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy40:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy39;
-	if(yych >= ';')	goto yy2;
-yy41:	yych = *++YYCURSOR;
-	if(yych != '"')	goto yy2;
-yy42:	yych = *++YYCURSOR;
-yy43:
-#line 284
-	{
-	int len;
-	char *str;
-
-	len = parse_iv(start + 2);
-
-	if (len == 0) {
-		str = empty_string;
-	} else {
-		str = estrndup(YYCURSOR, len);
-	}
-
-	YYCURSOR += len + 2;
-	*p = YYCURSOR;
-
-	INIT_PZVAL(*rval);
-	ZVAL_STRINGL(*rval, str, len, 0);
-	return 1;
-}
-yy44:	yych = *++YYCURSOR;
-	if(yych <= '-'){
-		if(yych == '+')	goto yy45;
-		if(yych <= ',')	goto yy2;
-	} else {
-		if(yych <= '.')	goto yy48;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy46;
-		goto yy2;
-	}
-yy45:	yych = *++YYCURSOR;
-	if(yych == '.')	goto yy48;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy46:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy47:	if(yych <= '/'){
-		if(yych == '.')	goto yy58;
-		goto yy2;
-	} else {
-		if(yych <= '9')	goto yy46;
-		if(yych == ';')	goto yy51;
-		goto yy2;
-	}
-yy48:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy49:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy50:	if(yych <= ';'){
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy49;
-		if(yych <= ':')	goto yy2;
-	} else {
-		if(yych <= 'E'){
-			if(yych <= 'D')	goto yy2;
-			goto yy53;
-		} else {
-			if(yych == 'e')	goto yy53;
-			goto yy2;
-		}
-	}
-yy51:	yych = *++YYCURSOR;
-yy52:
-#line 277
-	{
-	*p = YYCURSOR;
-	INIT_PZVAL(*rval);
-	ZVAL_DOUBLE(*rval, atof(start + 2));
-	return 1;
-}
-yy53:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy54;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy55;
-		goto yy2;
-	}
-yy54:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych == '+')	goto yy57;
-		goto yy2;
-	} else {
-		if(yych <= '-')	goto yy57;
-		if(yych <= '/')	goto yy2;
-		if(yych >= ':')	goto yy2;
-	}
-yy55:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy56:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy55;
-	if(yych == ';')	goto yy51;
-	goto yy2;
-yy57:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy55;
-	goto yy2;
-yy58:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy59:	++YYCURSOR;
-	if((YYLIMIT - YYCURSOR) < 4) YYFILL(4);
-	yych = *YYCURSOR;
-yy60:	if(yych <= ';'){
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy59;
-		if(yych <= ':')	goto yy2;
-		goto yy51;
-	} else {
-		if(yych <= 'E'){
-			if(yych <= 'D')	goto yy2;
-			goto yy53;
-		} else {
-			if(yych == 'e')	goto yy53;
-			goto yy2;
-		}
-	}
-yy61:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy62;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy63;
-		goto yy2;
-	}
-yy62:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy63:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy64:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy63;
-	if(yych != ';')	goto yy2;
-yy65:	yych = *++YYCURSOR;
-yy66:
-#line 270
-	{
-	*p = YYCURSOR;
-	INIT_PZVAL(*rval);
-	ZVAL_LONG(*rval, parse_iv(start + 2));
-	return 1;
-}
-yy67:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy68;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy69;
-		goto yy2;
-	}
-yy68:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy69:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy70:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy69;
-	if(yych != ';')	goto yy2;
-yy71:	yych = *++YYCURSOR;
-yy72:
-#line 263
-	{
-	*p = YYCURSOR;
-	INIT_PZVAL(*rval);
-	ZVAL_BOOL(*rval, parse_iv(start + 2));
-	return 1;
-}
-yy73:	yych = *++YYCURSOR;
-yy74:
-#line 256
-	{
-	*p = YYCURSOR;
-	INIT_PZVAL(*rval);
-	ZVAL_NULL(*rval);
-	return 1;
-}
-yy75:	yych = *++YYCURSOR;
-	if(yych <= ','){
-		if(yych != '+')	goto yy2;
-	} else {
-		if(yych <= '-')	goto yy76;
-		if(yych <= '/')	goto yy2;
-		if(yych <= '9')	goto yy77;
-		goto yy2;
-	}
-yy76:	yych = *++YYCURSOR;
-	if(yych <= '/')	goto yy2;
-	if(yych >= ':')	goto yy2;
-yy77:	++YYCURSOR;
-	if(YYLIMIT == YYCURSOR) YYFILL(1);
-	yych = *YYCURSOR;
-yy78:	if(yych <= '/')	goto yy2;
-	if(yych <= '9')	goto yy77;
-	if(yych != ';')	goto yy2;
-yy79:	yych = *++YYCURSOR;
-yy80:
-#line 237
-	{
-	int id;
-
- 	*p = YYCURSOR;
-	if (!var_hash) return 0;
-
-	id = parse_iv(start + 2) - 1;
-	if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {
-		return 0;
-	}
-
-	zval_ptr_dtor(rval);
-	*rval = *rval_ref;
-	(*rval)->refcount++;
-	(*rval)->is_ref = 1;
-	
-	return 1;
-}
-}
-#line 406
-
-
-	return 0;
-}
diff -urN php-4.2.1RC2.org/ext/xslt/config.m4 php-4.2.1RC2/ext/xslt/config.m4
--- php-4.2.1RC2.org/ext/xslt/config.m4	Sat May 11 20:49:24 2002
+++ php-4.2.1RC2/ext/xslt/config.m4	Sat May 11 21:09:39 2002
@@ -66,7 +66,8 @@
     done
 
     if test "$found_expat" = "no"; then
-      AC_MSG_ERROR([expat not found. To build sablotron you need the expat library.])
+      PHP_ADD_LIBRARY(xmlparse,, XSLT_SHARED_LIBADD)                                                             
+      PHP_ADD_LIBRARY(xmltok,, XSLT_SHARED_LIBADD)                
     fi
 
     if test "$PHP_ICONV" = "no"; then
@@ -81,7 +82,7 @@
       found_js=no
       AC_CHECK_LIB(js, JS_GetRuntime, found_js=yes)
       if test "$found_js" = "yes"; then
-        PHP_ADD_LIBRARY(js)
+        PHP_ADD_LIBRARY(js,, XSLT_SHARED_LIBADD)
       fi
     fi
 
diff -urN php-4.2.1RC2.org/ext/yp/Makefile.in php-4.2.1RC2/ext/yp/Makefile.in
--- php-4.2.1RC2.org/ext/yp/Makefile.in	Sat May 11 20:49:24 2002
+++ php-4.2.1RC2/ext/yp/Makefile.in	Sat May 11 21:05:41 2002
@@ -2,5 +2,6 @@
 LTLIBRARY_NAME    = libyp.la
 LTLIBRARY_SOURCES = yp.c
 LTLIBRARY_SHARED_NAME = yp.la
+LTLIBRARY_SHARED_LIBADD = $(NSL_SHARED_LIBADD)
 
 include $(top_srcdir)/build/dynlib.mk
diff -urN php-4.2.1RC2.org/ext/yp/config.m4 php-4.2.1RC2/ext/yp/config.m4
--- php-4.2.1RC2.org/ext/yp/config.m4	Sat May 11 20:49:24 2002
+++ php-4.2.1RC2/ext/yp/config.m4	Sat May 11 21:05:41 2002
@@ -6,8 +6,11 @@
 [  --enable-yp             Include YP support.])
 
 if test "$PHP_YP" != "no"; then
-  AC_DEFINE(HAVE_YP,1,[ ])
+  PHP_SUBST(NSL_SHARED_LIBADD)
+  AC_ADD_LIBRARY_WITH_PATH(nsl, /usr/lib, NSL_SHARED_LIBADD)
+  AC_CHECK_LIB(nsl, yp_match, [AC_DEFINE(HAVE_YP,1,[ ])], [AC_MSG_ERROR(YP module requires libnsl)],)
   PHP_EXTENSION(yp, $ext_shared)
+
   case $host_alias in
   *solaris*)
     AC_DEFINE(SOLARIS_YP,1,[ ]) ;;
