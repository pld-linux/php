--- php-4.3.4RC3/ext/mbstring/mbstring.c.orig	2003-10-26 08:47:42.000000000 +0100
+++ php-4.3.4RC3/ext/mbstring/mbstring.c	2003-10-30 23:16:43.042175552 +0100
@@ -1357,7 +1357,7 @@
 		size = 0;
 		switch (Z_TYPE_PP(arg1)) {
 		case IS_ARRAY:
-			if (!php_mb_parse_encoding_array(*arg1, &list, &size, 0)) {
+			if (!php_mb_parse_encoding_array(*arg1, &list, &size, 0 TSRMLS_CC)) {
 				if (list) {
 					efree(list);
 				}
@@ -1887,7 +1887,7 @@
 		convd = mbfl_buffer_converter_new(from_encoding, to_encoding, 0);
 		if (convd != NULL) {
 			mbfl_buffer_converter_illegal_mode(convd, MBSTRG(current_filter_illegal_mode));
-			mbfl_buffer_converter_illegal_substchar(convd, MBSTRG(current_filter_illegal_substchar) TSRMLS_CC);
+			mbfl_buffer_converter_illegal_substchar(convd, MBSTRG(current_filter_illegal_substchar));
 		} else {
 			php_error_docref(NULL TSRMLS_CC, E_WARNING, "Unable to create converter");
 		}
@@ -2832,7 +2832,7 @@
 	if (ZEND_NUM_ARGS() >= 2 &&  Z_STRVAL_PP(arg_list)) {
 		switch (Z_TYPE_PP(arg_list)) {
 		case IS_ARRAY:
-			if (!php_mb_parse_encoding_array(*arg_list, &list, &size, 0)) {
+			if (!php_mb_parse_encoding_array(*arg_list, &list, &size, 0 TSRMLS_CC)) {
 				if (list) {
 					efree(list);
 					size = 0;
@@ -3135,7 +3135,7 @@
 	elistsz = 0;
 	switch (Z_TYPE_PP(args[1])) {
 	case IS_ARRAY:
-		php_mb_parse_encoding_array(*args[1], &elist, &elistsz, 0);
+		php_mb_parse_encoding_array(*args[1], &elist, &elistsz, 0 TSRMLS_CC);
 		break;
 	default:
 		convert_to_string_ex(args[1]);
@@ -3841,7 +3841,7 @@
 	string.no_language = MBSTRG(current_language);
 	string.val = (char*)arg_string;
 	string.len = arg_length;
-	encoding = mbfl_identify_encoding_no(&string, elist, size TSRMLS_CC);
+	encoding = mbfl_identify_encoding_no(&string, elist, size);
 
 	if (encoding != mbfl_no_encoding_invalid) {
 		MBSTRG(http_input_identify) = encoding;
