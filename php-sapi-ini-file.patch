to test which is main php.ini:
$ php -r 'var_dump(array(get_cfg_var("cfg_file_path"),php_ini_loaded_file()));'

https://github.com/pld-linux/php/commit/762ec2e

--- php-7.4.0beta1.oric/main/php_ini.c	2019-07-24 12:38:41.000000000 +0300
+++ php-7.4.0beta1/main/php_ini.c	2019-08-02 15:30:54.118722110 +0300
@@ -410,12 +410,19 @@
 #endif
 /* }}} */
 
+static int php_csort(const struct dirent **a, const struct dirent **b)
+{
+	return strcmp((*a)->d_name,(*b)->d_name);
+}
+
 /* {{{ php_init_config
  */
 int php_init_config(void)
 {
 	char *php_ini_file_name = NULL;
 	char *php_ini_search_path = NULL;
+	// value for php_ini_loaded_file() to be stored into php_ini_opened_path
+	char *php_ini_loaded_file = NULL;
 	int php_ini_scanned_path_len;
 	char *open_basedir;
 	int free_ini_search_path = 0;
@@ -595,21 +602,28 @@
 			}
 		}
 
-		/* Otherwise search for php-%sapi-module-name%.ini file in search path */
+		/* Search (global) php.ini file in search path */
 		if (!fp) {
-			const char *fmt = "php-%s.ini";
-			char *ini_fname;
-			spprintf(&ini_fname, 0, fmt, sapi_module.name);
-			fp = php_fopen_with_path(ini_fname, "r", php_ini_search_path, &opened_path);
-			efree(ini_fname);
+			fp = php_fopen_with_path("php.ini", "r", php_ini_search_path, &opened_path);
 			if (fp) {
+				zend_file_handle fh;
 				filename = ZSTR_VAL(opened_path);
+				zend_stream_init_fp(&fh, VCWD_FOPEN(filename, "r"), filename);
+				RESET_ACTIVE_INI_HASH();
+
+				zend_parse_ini_file(&fh, 1, ZEND_INI_SCANNER_NORMAL, (zend_ini_parser_cb_t) php_ini_parser_cb, &configuration_hash);
+
+				php_ini_loaded_file = estrdup(filename);
 			}
 		}
 
-		/* If still no ini file found, search for php.ini file in search path */
+		/* Also search for php-%sapi-module-name%.ini file in search path */
 		if (!fp) {
-			fp = php_fopen_with_path("php.ini", "r", php_ini_search_path, &opened_path);
+			const char *fmt = "php-%s.ini";
+			char *ini_fname;
+			spprintf(&ini_fname, 0, fmt, sapi_module.name);
+			fp = php_fopen_with_path(ini_fname, "r", php_ini_search_path, &opened_path);
+			efree(ini_fname);
 			if (fp) {
 				filename = ZSTR_VAL(opened_path);
 			}
@@ -631,14 +645,28 @@
 
 		{
 			zval tmp;
+			// use main php.ini if loaded
+			// see https://github.com/pld-linux/php/commit/762ec2e
+			// test with:
+			// php -r 'var_dump(array(get_cfg_var("cfg_file_path"),php_ini_loaded_file()));'
+			if (php_ini_loaded_file) {
+				if (fh.filename) {
+					efree((char *)fh.filename);
+				}
+				fh.filename = php_ini_loaded_file;
+			}
 
 			ZVAL_NEW_STR(&tmp, zend_string_init(fh.filename, strlen(fh.filename), 1));
 			zend_hash_str_update(&configuration_hash, "cfg_file_path", sizeof("cfg_file_path")-1, &tmp);
 			if (opened_path) {
 				zend_string_release_ex(opened_path, 0);
-			} else {
+			}
+
+			if (fh.filename) {
 				efree((char *)fh.filename);
+				fh.filename = NULL;
 			}
+
 			php_ini_opened_path = zend_strndup(Z_STRVAL(tmp), Z_STRLEN(tmp));
 		}
 	}
@@ -661,12 +689,14 @@
 		zend_llist scanned_ini_list;
 		zend_llist_element *element;
 		int l, total_l = 0;
+		const char *fmt = "%s:" PHP_CONFIG_FILE_PATH "/%s.d";
 		char *bufpath, *debpath, *endpath;
 		int lenpath;
 
 		zend_llist_init(&scanned_ini_list, sizeof(char *), (llist_dtor_func_t) free_estring, 1);
 
-		bufpath = estrdup(php_ini_scanned_path);
+		bufpath = emalloc(strlen(php_ini_scanned_path) + strlen(fmt) + strlen(sapi_module.name));
+		sprintf(bufpath, fmt, php_ini_scanned_path, sapi_module.name);
 		for (debpath = bufpath ; debpath ; debpath=endpath) {
 			endpath = strchr(debpath, DEFAULT_DIR_SEPARATOR);
 			if (endpath) {
@@ -679,7 +709,7 @@
 			}
 			lenpath = (int)strlen(debpath);
 
-			if (lenpath > 0 && (ndir = php_scandir(debpath, &namelist, 0, php_alphasort)) > 0) {
+			if (lenpath > 0 && (ndir = php_scandir(debpath, &namelist, 0, php_csort)) > 0) {
 
 				for (i = 0; i < ndir; i++) {
 
